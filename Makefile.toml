[tasks.linux_apt_get_update]
script = """
[ $(id -u) != 0 ] && export SUDO="sudo" || export SUDO=""
$SUDO apt-get update
"""

[tasks.linux_apt_get_essentials]
script = """
[ $(id -u) != 0 ] && export SUDO="sudo" || export SUDO=""
$SUDO apt-get install -y \
    autoconf \
    build-essential \
    cmake \
    git  \
    libtool \
    pkg-config \
    unzip \
    zip
"""
dependencies = ["linux_apt_get_update"]

[tasks.linux_install_cfitsio]
script = """
[ $(id -u) != 0 ] && export SUDO="sudo" || export SUDO=""
cd /tmp
wget http://heasarc.gsfc.nasa.gov/FTP/software/fitsio/c/cfitsio-3.49.tar.gz
tar -zxvf cfitsio-3.49.tar.gz
cd cfitsio-3.49/
CFLAGS="-O3" ./configure --prefix=/usr/local --enable-reentrant --enable-ssse3 --enable-sse2
make -j
$SUDO make install
"""
dependencies = ["linux_apt_get_essentials"]

[tasks.linux_install_aoflagger]
script = """
[ $(id -u) != 0 ] && export SUDO="sudo" || export SUDO=""
$SUDO apt-get install -y \
    build-essential \
    casacore-data \
    casacore-dev \
    cmake \
    git  \
    libblas-dev \
    libboost-date-time-dev \
    libboost-filesystem-dev \
    libboost-system-dev \
    libboost-test-dev \
    libfftw3-dev \
    libgsl-dev \
    libgtkmm-3.0-dev \
    liblapack-dev \
    liblua5.3-dev \
    libpng-dev \
    libpython3-dev \
    libssl-dev \
    libxml2-dev \
    pkg-config \
    python3 \
    unzip
cd /tmp
[ -d "aoflagger" ] && rm -rf aoflagger
git clone --recurse-submodules https://gitlab.com/aroffringa/aoflagger.git --branch v3.1.0
cd aoflagger
chmod a+rwx .
mkdir build
cd build
cmake ..
make
$SUDO make install
"""
dependencies = ["linux_install_cfitsio"]

[tasks.linux_install_erfa]
script = """
[ $(id -u) != 0 ] && export SUDO="sudo" || export SUDO=""
cd /tmp
[ -d "erfa" ] && rm -rf erfa
git clone --recurse-submodules https://github.com/liberfa/erfa.git --branch v1.7.1
cd erfa
libtoolize
./bootstrap.sh
./configure
make
$SUDO make install
"""
dependencies = ["linux_apt_get_essentials"]

[tasks.linux_install_deps]
dependencies = [
  "linux_install_aoflagger",
  "linux_install_erfa"
]

[tasks.mac_install_deps]
script = """
brew tap mwaTelescope/tap
wget https://github.com/MWATelescope/homebrew-tap/releases/download/v2021.05.10.06.46/casacore-data--2021.02.26.catalina.bottle.1.tar.gz -O casacore-data--2021.02.26.catalina.bottle.tar.gz
brew install -f casacore-data--2021.02.26.catalina.bottle.tar.gz
wget https://github.com/MWATelescope/homebrew-tap/releases/download/v2021.05.10.06.46/casacore--3.4.0.catalina.bottle.1.tar.gz -O casacore--3.4.0.catalina.bottle.tar.gz
brew install -f casacore--3.4.0.catalina.bottle.tar.gz
wget https://github.com/MWATelescope/homebrew-tap/releases/download/v2021.05.10.06.46/aoflagger--3.0.0.catalina.bottle.1.tar.gz -O aoflagger--3.0.0.catalina.bottle.tar.gz
brew install -f aoflagger--3.0.0.catalina.bottle.tar.gz
wget https://github.com/MWATelescope/homebrew-tap/releases/download/v2021.07.20.10.17/erfa--2.0.0.catalina.bottle.1.tar.gz -O erfa--2.0.0.catalina.bottle.1.tar.gz
brew install -f erfa--2.0.0.catalina.bottle.1.tar.gz
"""

[tasks.install_deps]
linux_alias = "linux_install_deps"
mac_alias = "mac_install_deps"

[tasks.check]
command = "cargo"
args = ["check"]

[tasks.format_fix]
command = "cargo"
args = ["fmt", "--", "--emit=files"]
install_crate = "rustfmt"

[tasks.format_check]
command = "cargo"
args = ["fmt", "--all", "--", "--check"]
install_crate = "rustfmt"

[tasks.clippy]
command = "cargo"
args = ["clippy", "--all-targets", "--all-features", "--", "-D", "warnings"]
install_crate = "clippy"

[tasks.clean]
command = "cargo"
args = ["clean"]

# The "cargo update -p" line will need to be updated when ndarray 0.16 is
# released, probably just deleted.
[tasks.update]
script = """
cargo update
cargo update -p approx:0.5.0 --precise 0.4.0
"""

[tasks.build_clean]
command = "cargo"
args = ["build"]
dependencies = ["clean"]

[tasks.test]
command = "cargo"
args = ["test"]

[tasks.ci]
dependencies = [
  "clean",
  "update",
  "check",
  "format_check",
  "clippy",
  "test",
]

[tasks.pre_commit]
dependencies = [
  "format_fix",
  "ci",
]
