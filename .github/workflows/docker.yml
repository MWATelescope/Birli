on: [push, pull_request]

name: Docker Multiplatform

env:
  REGISTRY_IMAGE: mwatelescope/birli

jobs:
  build:
    runs-on: ${{ matrix.os }}
    environment: CI
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            platform: linux/amd64
            dockerfile: Dockerfile
          - os: ubuntu-22.04-arm
            platform: linux/arm64
            dockerfile: Dockerfile
          - os: ubuntu-22.04
            platform: linux/amd64
            dockerfile: spack.Dockerfile
            suffix: -spack
          - os: ubuntu-22.04-arm
            platform: linux/arm64
            dockerfile: spack.Dockerfile
            suffix: -spack
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV
          echo "SUFFIX=${{ matrix.suffix || '' }}" >> $GITHUB_ENV

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          flavor: |
            suffix=${{ env.SUFFIX }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: ${{ matrix.platform }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: ${{ matrix.platform }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=true

      - name: Export digest
        run: |
          mkdir -p /tmp/digests/${{ matrix.dockerfile }}${{ env.SUFFIX }}
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${{ matrix.dockerfile }}${{ env.SUFFIX }}/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_PAIR }}-${{ matrix.dockerfile }}${{ env.SUFFIX }}
          path: /tmp/digests/${{ matrix.dockerfile }}${{ env.SUFFIX }}/*
          if-no-files-found: error
          retention-days: 1

  merge:
    runs-on: ubuntu-latest
    needs:
      - build
    strategy:
      matrix:
        dockerfile: [Dockerfile, spack.Dockerfile]
        include:
          - dockerfile: Dockerfile
            suffix: ""
          - dockerfile: spack.Dockerfile
            suffix: "-spack"
    outputs:
      container: ${{ env.REGISTRY_IMAGE }}:${{ steps.meta.outputs.version }}${{ matrix.suffix }}
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-*-${{ matrix.dockerfile }}${{ matrix.suffix }}
          merge-multiple: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          flavor: |
            suffix=${{ matrix.suffix }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:${{ steps.meta.outputs.version }}${{ matrix.suffix }}