# Based on https://github.com/actions-rs/meta/blob/master/recipes/quickstart.md

on: [push, pull_request]

name: Generate Coverage report

jobs:
  coverage:
    runs-on: ubuntu-latest
    container: mwatelescope/birli:latest
    environment: CI

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install nightly toolchain
        run: |
          curl https://sh.rustup.rs -sSf | sh -s -- -y
          export PATH="${HOME}/.cargo/bin:${PATH}"
          rustup set profile minimal
          rustup toolchain install nightly --component llvm-tools-preview
          rustup default nightly

      - name: Install Cargo Packages
        run: |
          export PATH="${HOME}/.cargo/bin:${PATH}"
          apt-get update
          apt-get install -y unzip libssl-dev jq
          cargo install --force cargo-make cargo-binutils
        env:
          DEBIAN_FRONTEND: noninteractive

      - name: Generate test lcov coverage into coverage/ dir
        env:
          LD_LIBRARY_PATH: /usr/local/lib/
          RUSTFLAGS: -Zinstrument-coverage
          LLVM_PROFILE_FILE: json5format-%m.profraw
        run: |
          export PATH="${HOME}/.cargo/bin:${PATH}"
          which cargo
          rustc -V
          cargo -V
          rustup -V
          cargo make update
          mkdir -p coverage
          cargo test --tests
          cargo profdata -- \
            merge -sparse json5format-*.profraw -o json5format.profdata
          cargo cov -- export --format=lcov \
            --ignore-filename-regex='(/.cargo/registry|/rustc|test.rs$)' \
            --instr-profile=json5format.profdata \
            $(cargo test --tests --no-run --message-format=json | jq -r '
              select(.profile.test == true)
              | .filenames[]
              | select(endswith(".dSYM")|not)
              | " -object \(.)"
            ') \
            > coverage/coverage.lcov

      - name: Upload reports to codecov.io
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
